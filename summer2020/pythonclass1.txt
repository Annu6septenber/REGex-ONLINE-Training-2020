Assignment 1 

Q1. ->Jython is the JVM implementation of the Python programming language. It is designed to run on the Java platform. A            Jython program can import and use any Java class. Just as Java, Jython program compiles to bytecode. One of the                       main advantages is that a user interface designed in Python can use GUI elements of AWT, Swing or SWT Package.           

      ->CPython is the reference implementation of the Python programming language. Written in C and Python, CPython is the               default and most widely used implementation of the language.
         CPython can be defined as both an interpreter and a compiler as it compiles Python code into bytecode before interpreting           it. It has a foreign function interface with several languages including C, in which one must explicitly write bindings in a             language other than Python.

Q2.  Python2 :-> 1. When two integers are divided, you always provide integer value.
	          2.To store Unicode string value, you require to define them with "u".
	          3.Rules of ordering comparison are very complex.
	          4.The value of the global variable will change while using it inside for-loop.
	          5.Python version 3 is not backwardly compatible with Python 2.
		print "hello"
      
         Python3:-> 1.Whenever two integers are divided, you get a float value
	            2.In Python 3, default storing of strings is Unicode.
	            3.In this version, Rules of ordering comparisons have been simplified.
	            4.The value of variables never changes.
	            5.Not difficult to port python 2 to python 3 but it is never reliable.
		print ("hello")

Q3. ASCII:->  ASCII defines 128 characters, which map to the numbers 0–127. Unicode defines (less than) 221characters, which, 	      similarly, map to numbers 0–221 (though not all numbers are currently assigned, and some are reserved).
	

     Unicode:-> Unicode is a superset of ASCII, and the numbers 0–128 have the same meaning in ASCII as they have in Unicode.                             For example, the number 65 means "Latin capital 'A'".

                            Because Unicode characters don't generally fit into one 8-bit byte, there are numerous ways of storing Unicode                             characters in byte sequences, such as UTF-32 and UTF-8.



	
			        