Q1. What is JPython and CPython
Ans1.Jython- It is an implementation of the Python programming language that can run on the Java platform. 
Jython programs use Java classes instead of Python modules. It compiles into Java byte code, which can then be run by Java virtual machine.
Enables the use of Java class library functions from the Python program. Jython is slow as compared to Cpython and lacks compatibility with CPython libraries.

Cpython-The default implementation of the Python programming language is Cpython. As the name suggests Cpython is written in C language.
It compiles the python source code into intermediate bytecode, which is executed by the Cpython virtual machine. CPython is distributed with a large standard library written in a mixture of C and Python.
It provides the highest level of compatibility with Python packages and C extension modules. All versions of the Python language are implemented in C because CPython is the reference implementation.
Some of the implementations which are based on CPython runtime core but with extended behavior or features in some aspects are Stackless Python, wpython, MicroPython.

Q2.Basic difference Between python2 and python3
1. Python 3 syntax is simpler and easily understandable whereas Python 2 syntax is comparatively difficult to understand.
2. Python 3 default storing of strings is Unicode whereas Python 2 stores need to define Unicode string value with "u."
3. Python 3 value of variables never changes whereas in Python 2 value of the global variable will be changed while using it inside for-loop.
4. Python 3 exceptions should be enclosed in parenthesis while Python 2 exceptions should be enclosed in notations.
5. Python 3 rules of ordering comparisons are simplified whereas Python 2 rules of ordering comparison are complex.
6. Python 3 offers Range() function to perform iterations whereas, In Python 2, the xrange() is used for iterations.

Q3. Difference between ASCII and Unicode.
Ans3. ASCII defines 128 characters, which map to the numbers 0–127. Unicode defines (less than) 221characters, which, similarly, map to numbers 0–221 (though not all numbers are currently assigned, and some are reserved).
Unicode is a superset of ASCII, and the numbers 0–128 have the same meaning in ASCII as they have in Unicode. For example, the number 65 means "Latin capital 'A'".
Because Unicode characters don't generally fit into one 8-bit byte, there are numerous ways of storing Unicode characters in byte sequences, such as UTF-32 and UTF-8.
C follows ASCII and Java follows UNICODE.

